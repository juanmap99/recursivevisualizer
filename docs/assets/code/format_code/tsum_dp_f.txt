$sdef$s $dtotalTargetSumHelper$d(nums,target,index,curr_sum,memo):
$b    $b$sif$s (index,curr_sum) $sin$s memo: $sreturn$s memo[(index,curr_sum)]
$b    $b$sif$s index < $u0$u $sand$s curr_sum == target: $sreturn$s $u1$u
$b    $b$sif$s index < $u0$u: $sreturn$s $u0$u
    $d $d
$b    $bsolsSumando = totalTargetSumHelper(nums,target,index-$u1$u,
$b                                    $bcurr_sum + nums[index],memo)
$b    $bsolsRestando = totalTargetSumHelper(nums,target,index-$u1$u,
$b                                    $bcurr_sum + -nums[index],memo)
    $d $d
$b    $btotalSol = solsSumando + solsRestando
$b    $bmemo[(index,curr_sum)] = totalSol
    $d $d
$b    $b$sreturn$s memo[(index,curr_sum)]

$d $d

$sdef$s $dtotalTargetSum$d(nums,target):
$b    $bmemo = {}
$b    $bindex = $flen$f(nums)-$u1$u
$b    $b$sreturn$s totalTargetSumHelper(nums,target,index,$u0$u,memo)

$d $d